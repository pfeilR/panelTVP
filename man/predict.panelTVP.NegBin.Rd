% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/S3_predict.R
\name{predict.panelTVP.NegBin}
\alias{predict.panelTVP.NegBin}
\title{Get predictions for new subjects based on a \code{panelTVP.NegBin} object}
\usage{
\method{predict}{panelTVP.NegBin}(object, X.new, timepoint, coverage = 0.95, pop.pred = FALSE, ...)
}
\arguments{
\item{object}{an object of class \code{panelTVP.NegBin}}

\item{X.new}{a matrix or data frame consisting of new data for the same variables
that were used for fitting the model. The first column must contain a 1, when
the fitted model contains an intercept.}

\item{timepoint}{a numeric scalar indicating the time point for which predictions should
be made, i.e., predictions for a given data set are only made for one specific time point.
In case you want predictions for additional time points you need to repeatedly call this
function.}

\item{coverage}{coverage probability for prediction intervals - defaults to 95 percent coverage}

\item{pop.pred}{logical value, if TRUE population-based predictions are made,
that ignore the random effects structure, if FALSE the random effects structure
is included as well where the unknown factor scores are sampled from their
standard Normal prior - defaults to FALSE}

\item{...}{optional arguments passed to the function (those are ignored)}
}
\value{
a list containing the following elements
\itemize{
\item \code{predictive.distribution}: a matrix where each row contains draws
from the posterior predictive distribution for the corresponding observation
\item \code{predictive.summary}: posterior mean as well as HPD interval based on
posterior predictive distribution for each new observation
}
}
\description{
This \code{predict} function simulates data and computes summary statistics based on the
posterior predictive distribution for new data under a Negative Binomial likelihood.
}
\examples{
# Predictions based on an object of class panelTVP.NegBin
# NB: To reduce computational effort, we have drastically reduced the length
# of the Markov Chain. You should use a much longer chain in your applications.
sim.negbin <- sim_panelTVP(n = 100,
                           Tmax = 4,
                           beta = c(1,0.5,0,0),
                           theta = c(0.8,0.5,0,0),
                           lambda = 1,
                           psi = 0.2,
                           r = 2,
                           model = "NegBin")
res.negbin <- panelTVP(y ~ W1 + W2 + W3,
                       data = sim.negbin$observed,
                       mcmc.opt = list(chain.length = 200, burnin = 100, thin = 1, asis = TRUE),
                       model = "NegBin")
# setting up design matrix for predicting two new observations
X.new <- data.frame(cbind(c(1,1), # column of 1's for the intercept
                          c(0.1,0),
                          c(-0.5,0.4),
                          c(0,0)))
colnames(X.new) <- colnames(res.negbin$data$X)
# prediction for the 2nd panel wave
pp <- predict(res.negbin, X.new = X.new, timepoint = 2)
plot(density(pp$predictive.distribution[1,]))
plot(density(pp$predictive.distribution[2,]))
pp$predictive.summary
}
\author{
Roman Pfeiler, Helga Wagner
}
